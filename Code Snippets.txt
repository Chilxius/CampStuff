//Code Snippets

//For Flier Game:
*******************
void checkHits()
{
  for( Shot s: shots )
  { 
    if( s.bad && player.gotHit(s) )
    {
      //player.upgrade++;
      s.offScreen = true;
      continue;
    }
    if( !s.bad )
      for( Enemy e: enemies )
        if( e.gotHit(s) )
        {
          s.offScreen = true;
          e.health-=s.power;
          if( s.type == 2 )
          {
            e.xSpd*=0.85;
            e.ySpd*=0.85;
            e.frozen = true;
          }
          if( e.health <= 0 )
            checkNextDrop(e);
        }
  }
}

void checkNextDrop( Enemy e )
{
  println(nextDrop);
  nextDrop--;
  if( nextDrop == 0 )
  {
    nextDrop = 20;
    pickup = new Upgrade(e);
  }
}

void cleanUp()
{
  for( int i = 0; i < shots.size(); i++ )
    if( shots.get(i).offScreen )
      shots.remove(i);
  for( int i = 0; i < enemies.size(); i++ )
    if( enemies.get(i).health <= 0 )
      enemies.remove(i);
}
***********************


//Goes in Chaser class

  void bounce( Chaser c )
  {
    //Directional Bounce
    if( xPos > c.xPos )
      xSpd = abs(c.xSpd);
    else
      xSpd = -abs(c.xSpd);
      
    if( yPos > c.yPos )
      ySpd = abs(c.ySpd);
    else
      ySpd = -abs(c.ySpd);
      
    bounceDelay = 10;
  }
  
  boolean touching( Chaser c )
  {
    return( dist( c.xPos, c.yPos, xPos, yPos ) < (c.size+size)/2 );
  }  


//Goes in handleChasers()

  //Check for collision
  for(int i = 0; i < currentChasers; i++)
    if( chasers[i].bounceDelay<=0 )
    for(int j = i+1; j < currentChasers; j++)
      if( chasers[i].touching(chasers[j]) )
      {
        chasers[j].bounce(chasers[i]);
        chasers[i].bounce(chasers[j]);
      }

//Goes in handlePlayer()

  //spawns new chaser
  if( currentChasers < chaserCount && score/1000 >= currentChasers )
    currentChasers++;

  //Detects damage
  for(int i = 0; i < currentChasers; i++)
    if( dist( chasers[i].xPos, chasers[i].yPos, mouseX, mouseY ) < 75 )
      health--;

//Goes in Chaser -> moveAndDraw()
    //Draw taunt
    fill(150,tauntDelay*3-20);
    text(taunts[currentTaunt],tauntX,tauntY);
    if( !gameOver && tauntDelay <= 0 )
    {
      tauntDelay = int(random(50,200));
      currentTaunt = int(random(10));
      tauntX = xPos;
      tauntY = yPos;
    }


//For drawing a "fallen over" image
push();
translate(lastX,lastY);
rotate(HALF_PI); //or PI*1.5
image(deadPic,0,0);
pop();


//For Breakout
//Goes in createBricks()

  //Remove duplicate bricks
  for( int i = 0; i < bricks.size(); i++ )
    for( int j = 0; j < bricks.size(); j++ )
      if( i != j && bricks.get(i).health != 0 && bricks.get(j).health != 0 && bricks.get(i).xPos == bricks.get(j).xPos && bricks.get(i).yPos == bricks.get(j).yPos )
        bricks.get(j).health = 0;
